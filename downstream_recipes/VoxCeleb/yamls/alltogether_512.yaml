# ################################
# Model: Speaker identification with xvectors
# Authors: Mirco Ravanelli & Nauman Dawalatabad 2020
# ################################

# Basic parameters
seed: 1986
__set_seed: !apply:torch.manual_seed [!ref <seed>]
output_folder: !ref results/alltogether_512/<seed>
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt

# Data files
data_folder: /gpfsscratch/rech/nou/uzn19yk/all_data/voxceleb/  # e.g. /path/to/VoxCeleb
train_annotation: !ref <data_folder>/train.csv
valid_annotation: !ref <data_folder>/dev.csv
skip_prep: False

# Training parameters
number_of_epochs: 10
batch_size: 16
lr: 0.001
lr_final: 0.0001
sample_rate: 16000
sentence_len: 3.0 # seconds
shuffle: True
random_chunk: False

# Feature parameters
n_mels: 80
left_frames: 0
right_frames: 0
deltas: False
baseline : False
# Number of speakers
out_n_neurons: 1211 #1211 for vox1  # 5994 for vox2, 7205 for vox1+vox2

dataloader_options:
    batch_size: !ref <batch_size>
    shuffle: !ref <shuffle>
    num_workers: 2

# Data augmentation
env_corrupt: !new:speechbrain.lobes.augment.EnvCorrupt
    openrir_folder: !ref <data_folder>
    openrir_max_noise_len: !ref <sentence_len>
    reverb_prob: 1.0
    noise_prob: 1.0
    babble_prob: 0.0
    noise_snr_low: 0
    noise_snr_high: 15
    rir_scale_factor: 1.0

augmentation: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
    sample_rate: 16000
    speeds: [100]

compute_features: !new:speechbrain.lobes.features.Fbank
    n_mels: !ref <n_mels>
    left_frames: !ref <left_frames>
    right_frames: !ref <right_frames>
    deltas: !ref <deltas>

mean_var_norm: !new:speechbrain.processing.features.InputNormalization
    norm_type: sentence
    std_norm: False

embedding_model: !new:speechbrain.lobes.models.Xvector.Xvector
    in_channels: 512
    activation: !name:torch.nn.LeakyReLU
    tdnn_blocks: 5
    tdnn_channels: [512, 512, 512, 512, 1500]
    tdnn_kernel_sizes: [5, 3, 3, 1, 1]
    tdnn_dilations: [1, 2, 3, 1, 1]
    lin_neurons: 512

classifier: !new:speechbrain.lobes.models.Xvector.Classifier
    input_shape: [null, null, 512]
    activation: !name:torch.nn.LeakyReLU
    lin_blocks: 1
    lin_neurons: 512
    out_neurons: !ref <out_n_neurons>
 
normalize: !new:speechbrain.processing.features.InputNormalization
    norm_type: global


modules:
    compute_features: !ref <compute_features>
    augmentation: !ref <augmentation>
    env_corrupt: !ref <env_corrupt>
    embedding_model: !ref <embedding_model>
    classifier: !ref <classifier>
    mean_var_norm: !ref <mean_var_norm>
    normalize: !ref <normalize>


# Cost + optimization
compute_cost: !name:speechbrain.nnet.losses.nll_loss
compute_error: !name:speechbrain.nnet.losses.classification_error

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <number_of_epochs>

opt_class: !name:torch.optim.Adam
    lr: !ref <lr>

lr_annealing: !new:speechbrain.nnet.schedulers.LinearScheduler
    initial_value: !ref <lr>
    final_value: !ref <lr_final>
    epoch_count: !ref <number_of_epochs>

# Logging + checkpoints
train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>

error_stats: !name:speechbrain.utils.metric_stats.MetricStats
    metric: !name:speechbrain.nnet.losses.classification_error
        reduction: batch

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        embedding_model: !ref <embedding_model>
        classifier: !ref <classifier>
        normalizer: !ref <normalize>
        counter: !ref <epoch_counter>
